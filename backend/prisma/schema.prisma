generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id                String       @id @default(auto()) @map("_id") @db.ObjectId
    email             String       @unique
    firstName         String
    lastName          String
    encryptedPassword String
    memberOfTeams     User_Team[]
    ownedTeams        Team[]
    ownedBoards       Board[]
    permissions       Permission[]
}

model Team {
    id      String      @id @default(auto()) @map("_id") @db.ObjectId
    name    String
    isOpen  Boolean     @default(false)
    created DateTime    @default(now())
    members User_Team[]
    owner   User        @relation(fields: [userId], references: [id])
    userId  String      @db.ObjectId
    boards  Board[]
}

model User_Team {
    id     String @id @default(auto()) @map("_id") @db.ObjectId
    member User   @relation(fields: [userId], references: [id])
    team   Team   @relation(fields: [teamId], references: [id])
    userId String @db.ObjectId
    teamId String @db.ObjectId
}

model Board {
    id          String       @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    created     DateTime     @default(now())
    modified    DateTime     @default(now()) @updatedAt
    access      ACCESS?      @default(READ)
    owner       User         @relation(fields: [userId], references: [id])
    userId      String       @db.ObjectId
    team        Team?        @relation(fields: [teamId], references: [id])
    teamId      String?      @db.ObjectId
    permissions Permission[]
    sheets      Sheet[]
}

model Sheet {
    id      String   @id @default(auto()) @map("_id") @db.ObjectId
    history Json[]
    created DateTime @default(now())
    board   Board    @relation(fields: [boardId], references: [id])
    boardId String   @db.ObjectId
}

model Permission {
    id      String @id @default(auto()) @map("_id") @db.ObjectId
    user    User   @relation(fields: [userId], references: [id])
    board   Board  @relation(fields: [boardId], references: [id])
    access  ACCESS @default(READ)
    userId  String @db.ObjectId
    boardId String @db.ObjectId
}

enum ACCESS {
    READ
    WRITE
}
